% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trench-plotting.R
\name{plot2D}
\alias{plot2D}
\title{Trench 2D image}
\usage{
plot2D(
  data,
  .var = "d18O",
  vscale = "depth",
  rescale.h = 1,
  rescale.v = 1,
  xlim,
  ylim,
  zlim = NULL,
  qProbs = c(0.01, 0.99),
  xlab = "Trench position (m)",
  ylab = "Depth (m)",
  label = .var,
  main = "",
  palette = NULL,
  filledContour = FALSE,
  log = FALSE,
  horizontal = FALSE,
  fill = FALSE,
  hadj = 0,
  vadj = 0,
  line.h = 3,
  line.v = 3.5,
  ...
)
}
\arguments{
\item{data}{a trench data set following the default structure used in the
package.}

\item{.var}{character string with the name of the variable to be plotted,
defaults to "d18O"; must match one of the data column variables in
\code{data}. See also more options as explained in \code{\link{make2D}}.}

\item{vscale}{a character string giving the name of the vertical scale
variable used in the trench data; defaults to \code{"depth"}; see also
\code{\link{getZ}}.}

\item{rescale.h}{numeric factor which can be used to rescale the horizontal
scale to a different physical unit, e.g. from cm to m.}

\item{rescale.v}{same as \code{rescale.x} for the vertical scale.}

\item{xlim}{the x limits of the plot (horizontal direction).}

\item{ylim}{the y limits of the plot (vertical direction).}

\item{zlim}{the limits of the plotted data; this is used as limits for the
colour legend and thus the data range is constrained to these maximum and
minimum values to improve visual appearance. If not specified directly
(\code{zlim = NULL}), the limits are calculated from the data quantile
range as determined from the probabilities specified by \code{qProbs}.}

\item{qProbs}{numerical vector of length 2 giving the lower and upper
quantiles which are used to calculate \code{zlim} data limits if these are
not specified directly.}

\item{xlab}{x (horizontal) axis label.}

\item{ylab}{y (vertical) axis label.}

\item{label}{label for the data, used to annotate the colour legend.}

\item{main}{optional character string to be placed above the plot.}

\item{palette}{a character vector of colour codes for image plots, or a
colour palette function to be used to assign colours for filled contour
plots. The default is to calculate the colour palette internally from ten
colours of the diverging \code{RdYlBu} palette in the ColorBrewer 2.0
collection.}

\item{filledContour}{logical; shall a \code{\link{filled.contour}} plot be
created? Default \code{FALSE} plots an \code{\link[fields]{imagePlot}}.}

\item{log}{logical; if \code{TRUE} the data is displayed on a log10 scale.}

\item{horizontal}{logical; only for image plots. For \code{TRUE}, the colour
bar is plotted horizontally below the x axis of the plot, else it is
plotted vertically to the right of the plot.}

\item{fill}{logical; if NA values are present at the "top" side of the trench
data, for each profile the last NA bin is filled with the value from the
bin below if \code{fill} is set to \code{TRUE}. This is particularly
useful to improve the visual appearance of filled contour plots when the
trench has an undulating surface.}

\item{hadj}{adjustment of the colour bar legend in horizontal plot direction
relative to the default positioning.}

\item{vadj}{same as \code{hadj} for adjustment in the vertical direction.}

\item{line.h}{margin line where to position the label for the horizontal
plot axis.}

\item{line.v}{same as \code{line.h} for the vertical plot axis.}

\item{...}{further parameters passed on to \code{\link{filled.contour}} or to
\code{\link[fields]{imagePlot}}.}
}
\description{
Plot a two-dimensional (vertical x horizontal) representation of a certain
variable for a given trench data set, either as a
\code{\link{filled.contour}} plot or as an \code{\link[fieds]{imagePlot}}.
}
\details{
Some care has been taken to make this function as general as possible,
however, many aspects are hard to generalise, or would require even more
function parameters. Especially tricky is the positioning of the axes and
color bar labels; since these are placed using \code{mtext} or \code{text}
calls, the resulting positions of the labels heavily depend on the plot
dimensions and especially on the plot and outer margin settings. The default
settings will therefore likely result in incorrect positioning in many
cases. In these cases, fine tuning of the position can be achieved using the
\code{hadj} and \code{vadj} parameters for the colour bar legend and the
\code{line.h} and \code{line.v} parameters for the horizontal and vertical
axes labels, respectively. If needed, more (graphical) settings could be
passed on to the actual plotting functions via \code{...}.
}
\seealso{
\code{\link{filled.contour}}, \code{\link[fields]{imagePlot}},
  \code{\link[grfxtools]{ColorPal}}
}
\author{
Thomas MÃ¼nch
}
